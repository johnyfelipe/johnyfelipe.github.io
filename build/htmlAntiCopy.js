/* Generated by the Nim Compiler v1.5.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI620757493 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI889192520 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI889192527 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI603979779 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI603979780 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555128.base = NTI33555113;
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI603979780 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI603979779, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI603979779, name: "a1", sons: null}]};
NTI603979780.node = NNI603979780;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI889192527 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI889192520, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI889192527.node = NNI889192527;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI620757493 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI620757493.node = NNI620757493;
                      var helper_603979827 = new Uint32Array([3198944359, 3630892171]);

function makeNimstrLit(c_33556797) {
      var result = [];
  for (var i = 0; i < c_33556797.length; ++i) {
    result[i] = c_33556797.charCodeAt(i);
  }
  return result;
  

  
}

function cstrToNimstr(c_33556800) {
      var ln = c_33556800.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556800.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556800.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557136, src_33557137, ti_33557138) {
  var result_33557147 = null;

    switch (ti_33557138.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557127(ti_33557138))) {
      result_33557147 = src_33557137;
      }
      else {
        result_33557147 = [src_33557137[0], src_33557137[1]];
      }
      
      break;
    case 19:
            if (dest_33557136 === null || dest_33557136 === undefined) {
        dest_33557136 = {};
      }
      else {
        for (var key in dest_33557136) { delete dest_33557136[key]; }
      }
      for (var key in src_33557137) { dest_33557136[key] = src_33557137[key]; }
      result_33557147 = dest_33557136;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557138.base == null))) {
      result_33557147 = nimCopy(dest_33557136, src_33557137, ti_33557138.base);
      }
      else {
      if ((ti_33557138.kind == 17)) {
      result_33557147 = (dest_33557136 === null || dest_33557136 === undefined) ? {m_type: ti_33557138} : dest_33557136;
      }
      else {
        result_33557147 = (dest_33557136 === null || dest_33557136 === undefined) ? {} : dest_33557136;
      }
      }
      nimCopyAux(result_33557147, src_33557137, ti_33557138.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557137 === null) {
        result_33557147 = null;
      }
      else {
        if (dest_33557136 === null || dest_33557136 === undefined) {
          dest_33557136 = new Array(src_33557137.length);
        }
        else {
          dest_33557136.length = src_33557137.length;
        }
        result_33557147 = dest_33557136;
        for (var i = 0; i < src_33557137.length; ++i) {
          result_33557147[i] = nimCopy(result_33557147[i], src_33557137[i], ti_33557138.base);
        }
      }
    
      break;
    case 28:
            if (src_33557137 !== null) {
        result_33557147 = src_33557137.slice(0);
      }
    
      break;
    default: 
      result_33557147 = src_33557137;
      break;
    }

  return result_33557147;

}

function toJSStr(s_33556803) {
                    var Temporary5;
            var Temporary7;

  var result_33556804 = null;

    var res_33556838 = newSeq_33556821((s_33556803).length);
    var i_33556839 = 0;
    var j_33556840 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556839 < (s_33556803).length)) break Label2;
          var c_33556841 = s_33556803[i_33556839];
          if ((c_33556841 < 128)) {
          res_33556838[j_33556840] = String.fromCharCode(c_33556841);
          i_33556839 += 1;
          }
          else {
            var helper_33556853 = newSeq_33556821(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556854 = c_33556841.toString(16);
                  if ((((code_33556854) == null ? 0 : (code_33556854).length) == 1)) {
                  helper_33556853.push("%0");;
                  }
                  else {
                  helper_33556853.push("%");;
                  }
                  
                  helper_33556853.push(code_33556854);;
                  i_33556839 += 1;
                    if (((s_33556803).length <= i_33556839)) Temporary5 = true; else {                      Temporary5 = (s_33556803[i_33556839] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556841 = s_33556803[i_33556839];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556838[j_33556840] = decodeURIComponent(helper_33556853.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556838[j_33556840] = helper_33556853.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556840 += 1;
        }
    } while (false);
    if (res_33556838.length < j_33556840) { for (var i = res_33556838.length ; i < j_33556840 ; ++i) res_33556838.push(null); }
               else { res_33556838.length = j_33556840; };
    result_33556804 = res_33556838.join("");

  return result_33556804;

}

function raiseException(e_33556664, ename_33556665) {
    e_33556664.name = ename_33556665;
    if ((excHandler == 0)) {
    unhandledException(e_33556664);
    }
    
    throw e_33556664;

  
}

function chckIndx(i_33557180, a_33557181, b_33557182) {
      var Temporary1;

  var result_33557183 = 0;

  BeforeRet: do {
      if (!(a_33557181 <= i_33557180)) Temporary1 = false; else {        Temporary1 = (i_33557180 <= b_33557182);      }    if (Temporary1) {
    result_33557183 = i_33557180;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557180, a_33557181, b_33557182);
    }
    
  } while (false);

  return result_33557183;

}

function addInt(a_33556936, b_33556937) {
        var result = a_33556936 + b_33556937;
    checkOverflowInt(result);
    return result;
  

  
}

function mnewString(len_33556889) {
        return new Array(len_33556889);
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556940, b_33556941) {
        var result = a_33556940 - b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33556948, b_33556949) {
        if (b_33556949 == 0) raiseDivByZero();
    if (b_33556949 == -1 && a_33556948 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556948 / b_33556949);
  

  
}

function mulInt(a_33556944, b_33556945) {
        var result = a_33556944 * b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);

function chckRange(i_33557185, a_33557186, b_33557187) {
      var Temporary1;

  var result_33557188 = 0;

  BeforeRet: do {
      if (!(a_33557186 <= i_33557185)) Temporary1 = false; else {        Temporary1 = (i_33557185 <= b_33557187);      }    if (Temporary1) {
    result_33557188 = i_33557185;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557188;

}

function addChar(x_33557251, c_33557252) {
    x_33557251.push(c_33557252);

  
}

function SetCard(a_33556892) {
        var result = 0;
    for (var elem in a_33556892) { ++result; }
    return result;
  

  
}
var ConstSet9 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet10 = setConstr([65, 90], [97, 122]);
var ConstSet11 = setConstr(32, [48, 57], [65, 90], 95, [97, 122]);

function nimCharToStr(x_33556514) {
  var result_33556515 = [];

    result_33556515 = nimCopy(null, mnewString(1), NTI33554439);
    result_33556515[0] = x_33556514;

  return result_33556515;

}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var state_603979789 = [{a0: 1773455756, a1: 4275166512}];
if (globalThis.utcInstance_822085002 === undefined) {
  utcInstance_822085002 = [null];
}
if (globalThis.localInstance_822085003 === undefined) {
  localInstance_822085003 = [null];
}

function toFloat_33556001(i_33556002) {
  var result_33556003 = 0.0;

    result_33556003 = i_33556002;

  return result_33556003;

}

function HEX2F_33557570(x_33557571, y_33557572) {
  var result_33557573 = 0.0;

    result_33557573 = (toFloat_33556001(x_33557571) / toFloat_33556001(y_33557572));

  return result_33557573;

}

function epochTime_822086984() {
  var result_822086985 = 0.0;

    result_822086985 = HEX2F_33557570(new Date().getTime(), 1000);

  return result_822086985;

}

function isFatPointer_33557127(ti_33557128) {
  var result_33557129 = false;

  BeforeRet: do {
    result_33557129 = !((ConstSet1[ti_33557128.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557129;

}

function nimCopyAux(dest_33557140, src_33557141, n_33557142) {
    switch (n_33557142.kind) {
    case 0:
      break;
    case 1:
            dest_33557140[n_33557142.offset] = nimCopy(dest_33557140[n_33557142.offset], src_33557141[n_33557142.offset], n_33557142.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557142.sons.length; i++) {
      nimCopyAux(dest_33557140, src_33557141, n_33557142.sons[i]);
    }
    
      break;
    case 3:
            dest_33557140[n_33557142.offset] = nimCopy(dest_33557140[n_33557142.offset], src_33557141[n_33557142.offset], n_33557142.typ);
      for (var i = 0; i < n_33557142.sons.length; ++i) {
        nimCopyAux(dest_33557140, src_33557141, n_33557142.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556420(x_33556421, x_33556421_Idx, y_33556422) {
          if (x_33556421[x_33556421_Idx] === null) { x_33556421[x_33556421_Idx] = []; }
      var off = x_33556421[x_33556421_Idx].length;
      x_33556421[x_33556421_Idx].length += y_33556422.length;
      for (var i = 0; i < y_33556422.length; ++i) {
        x_33556421[x_33556421_Idx][off+i] = y_33556422.charCodeAt(i);
      }
    

  
}

function newSeq_33556821(len_33556823) {
  var result_33556824 = [];

    result_33556824 = new Array(len_33556823); for (var i = 0 ; i < len_33556823 ; ++i) { result_33556824[i] = null; }
  return result_33556824;

}

function unhandledException(e_33556660) {
    var buf_33556661 = [[]];
    if (!(((e_33556660.message).length == 0))) {
    buf_33556661[0].push.apply(buf_33556661[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556661[0].push.apply(buf_33556661[0], e_33556660.message);;
    }
    else {
    buf_33556661[0].push.apply(buf_33556661[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556661[0].push.apply(buf_33556661[0], makeNimstrLit(" ["));;
    add_33556420(buf_33556661, 0, e_33556660.name);
    buf_33556661[0].push.apply(buf_33556661[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556662 = toJSStr(buf_33556661[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556662);
  }
  else {
    throw cbuf_33556662;
  }
  

  
}

function raiseIndexError(i_33556751, a_33556752, b_33556753) {
    var Temporary1;

    if ((b_33556753 < a_33556752)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_33556751) + "") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_33556752) + "") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_33556753) + "") || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function rotl_603979804(x_603979805, k_603979806) {
  var result_603979807 = 0;

    result_603979807 = ((x_603979805 << k_603979806) | (x_603979805 >>> ((64 - k_603979806) >>> 0)));

  return result_603979807;

}

function next_603979816(r_603979817) {
  var result_603979818 = 0;

    var s0_603979819 = r_603979817.a0;
    var s1_603979820 = r_603979817.a1;
    result_603979818 = ((s0_603979819 + s1_603979820) >>> 0);
    s1_603979820 = (s1_603979820 ^ s0_603979819);
    r_603979817.a0 = ((rotl_603979804(s0_603979819, 55) ^ s1_603979820) ^ (s1_603979820 << 14));
    r_603979817.a1 = rotl_603979804(s1_603979820, 36);

  return result_603979818;

}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556934) {
        if (a_33556934 > 2147483647 || a_33556934 < -2147483648) raiseOverflow();
  

  
}

function skipRandomNumbers_603979825(s_603979826) {
    var s0_603979828 = 0;
    var s1_603979829 = 0;
    Label1: do {
      var i_603979838 = 0;
      var res_486539381 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539381 <= 1)) break Label3;
            i_603979838 = res_486539381;
            Label4: do {
              var b_603979843 = 0;
              var i_486539379 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_486539379 < 64)) break Label6;
                    b_603979843 = i_486539379;
                    if (!(((helper_603979827[chckIndx(i_603979838, 0, (helper_603979827).length - 1)] & (1 << b_603979843)) == 0))) {
                    s0_603979828 = (s0_603979828 ^ s_603979826.a0);
                    s1_603979829 = (s1_603979829 ^ s_603979826.a1);
                    }
                    
                    var _ = next_603979816(s_603979826);
                    i_486539379 = addInt(i_486539379, 1);
                  }
              } while (false);
            } while (false);
            res_486539381 = addInt(res_486539381, 1);
          }
      } while (false);
    } while (false);
    s_603979826.a0 = s0_603979828;
    s_603979826.a1 = s1_603979829;

  
}

function initRand_603979992(seed_603979993) {
    var Temporary1;

  var result_603979994 = [({a0: 0, a1: 0})];

    if (!((seed_603979993 == 0))) {
    Temporary1 = seed_603979993;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_603980000 = Temporary1;
    result_603979994[0].a0 = Math.floor(seed_603980000 / Math.pow(2, 16));
    result_603979994[0].a1 = (seed_603980000 & 65535);
    skipRandomNumbers_603979825(result_603979994[0]);
    var _ = next_603979816(result_603979994[0]);

  return result_603979994[0];

}

function initRand_603980017() {
  var result_603980018 = ({a0: 0, a1: 0});

    var time_603980019 = ((epochTime_822086984() * 1000.0) & 2147483647);
    result_603980018 = nimCopy(result_603980018, initRand_603979992(time_603980019), NTI603979780);

  return result_603980018;

}

function randomize_603980024() {
    state_603979789[0] = nimCopy(state_603979789[0], initRand_603980017(), NTI603979780);

  
}
randomize_603980024();

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function parseSaturatedNatural_872415548(s_872415549, b_872415550, b_872415550_Idx, start_872415551) {
      var Temporary1;
          var Temporary4;

  var result_872415552 = 0;

    var i_872415553 = start_872415551;
    if (((i_872415553 < (s_872415549).length) && (s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)] == 43))) {
    i_872415553 = addInt(i_872415553, 1);
    }
    
      if (!(i_872415553 < (s_872415549).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)]] != undefined);      }    if (Temporary1) {
    b_872415550[b_872415550_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_872415553 < (s_872415549).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_872415572 = subInt(s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)], 48);
          if ((b_872415550[b_872415550_Idx] <= divInt(subInt(2147483647, c_872415572), 10))) {
          b_872415550[b_872415550_Idx] = addInt(mulInt(b_872415550[b_872415550_Idx], 10), c_872415572);
          }
          else {
            b_872415550[b_872415550_Idx] = 2147483647;
          }
          
          i_872415553 = addInt(i_872415553, 1);
          Label5: do {
              Label6: while (true) {
              if (!((i_872415553 < (s_872415549).length) && (s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)] == 95))) break Label6;
                i_872415553 = addInt(i_872415553, 1);
              }
          } while (false);
        }
    } while (false);
    result_872415552 = subInt(i_872415553, start_872415551);
    }
    

  return result_872415552;

}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function HEX5BHEX5D_956304538(s_956304541, x_956304542) {
  var result_956304543 = [];

    var a_956304545 = x_956304542.a;
    var L_956304547 = addInt(subInt(subInt((s_956304541).length, x_956304542.b), a_956304545), 1);
    result_956304543 = nimCopy(null, mnewString(chckRange(L_956304547, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_956304552 = 0;
      var i_486539570 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539570 < L_956304547)) break Label3;
            i_956304552 = i_486539570;
            result_956304543[chckIndx(i_956304552, 0, (result_956304543).length - 1)] = s_956304541[chckIndx(addInt(i_956304552, a_956304545), 0, (s_956304541).length - 1)];
            i_486539570 = addInt(i_486539570, 1);
          }
      } while (false);
    } while (false);

  return result_956304543;

}

function HEX2EHEX2E_889192528(a_889192531, b_889192532) {
  var result_889192535 = ({a: 0, b: 0});

    result_889192535 = nimCopy(result_889192535, {a: a_889192531, b: b_889192532}, NTI889192527);

  return result_889192535;

}

function parseStandardFormatSpecifier_1056964666(s_1056964667, start_1056964668, ignoreUnknownSuffix_1056964669) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1056964670 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1056964670.fill = 32;
    result_1056964670.align = 0;
    result_1056964670.sign = 45;
    var i_1056964672 = start_1056964668;
    if (((addInt(i_1056964672, 1) < (s_1056964667).length) && (ConstSet2[s_1056964667[chckIndx(addInt(i_1056964672, 1), 0, (s_1056964667).length - 1)]] != undefined))) {
    result_1056964670.fill = s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)];
    result_1056964670.align = s_1056964667[chckIndx(addInt(i_1056964672, 1), 0, (s_1056964667).length - 1)];
    i_1056964672 = addInt(i_1056964672, 2);
    }
    else {
    if (((i_1056964672 < (s_1056964667).length) && (ConstSet3[s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)]] != undefined))) {
    result_1056964670.align = s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)];
    i_1056964672 = addInt(i_1056964672, 1);
    }
    }
    if (((i_1056964672 < (s_1056964667).length) && (ConstSet4[s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)]] != undefined))) {
    result_1056964670.sign = s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)];
    i_1056964672 = addInt(i_1056964672, 1);
    }
    
    if (((i_1056964672 < (s_1056964667).length) && (s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)] == 35))) {
    result_1056964670.alternateForm = true;
    i_1056964672 = addInt(i_1056964672, 1);
    }
    
      if (!((addInt(i_1056964672, 1) < (s_1056964667).length) && (s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_1056964667[chckIndx(addInt(i_1056964672, 1), 0, (s_1056964667).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1056964670.padWithZero = true;
    i_1056964672 = addInt(i_1056964672, 1);
    }
    
    var parsedLength_1056964709 = parseSaturatedNatural_872415548(s_1056964667, result_1056964670, "minimumWidth", i_1056964672);
    i_1056964672 = addInt(i_1056964672, parsedLength_1056964709);
    if (((i_1056964672 < (s_1056964667).length) && (s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)] == 46))) {
    i_1056964672 = addInt(i_1056964672, 1);
    var parsedLengthB_1056964718 = parseSaturatedNatural_872415548(s_1056964667, result_1056964670, "precision", i_1056964672);
    i_1056964672 = addInt(i_1056964672, parsedLengthB_1056964718);
    }
    else {
      result_1056964670.precision = -1;
    }
    
      if (!(i_1056964672 < (s_1056964667).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1056964670.typ = s_1056964667[chckIndx(i_1056964672, 0, (s_1056964667).length - 1)];
    i_1056964672 = addInt(i_1056964672, 1);
    }
    
    result_1056964670.endPosition = i_1056964672;
      if (!!((i_1056964672 == (s_1056964667).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_1056964669);      }    if (Temporary3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_956304538(s_1056964667, HEX2EHEX2E_889192528(i_1056964672, 1)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1056964670;

}

function nucruneLen(s_956301322) {
  var result_956301323 = 0;

    result_956301323 = 0;
    var i_956301324 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_956301324 < (s_956301322).length)) break Label2;
          if ((s_956301322[chckIndx(i_956301324, 0, (s_956301322).length - 1)] <= 127)) {
          i_956301324 = addInt(i_956301324, 1);
          }
          else {
          if (((s_956301322[chckIndx(i_956301324, 0, (s_956301322).length - 1)] >>> 5) == 6)) {
          i_956301324 = addInt(i_956301324, 2);
          }
          else {
          if (((s_956301322[chckIndx(i_956301324, 0, (s_956301322).length - 1)] >>> 4) == 14)) {
          i_956301324 = addInt(i_956301324, 3);
          }
          else {
          if (((s_956301322[chckIndx(i_956301324, 0, (s_956301322).length - 1)] >>> 3) == 30)) {
          i_956301324 = addInt(i_956301324, 4);
          }
          else {
          if (((s_956301322[chckIndx(i_956301324, 0, (s_956301322).length - 1)] >>> 2) == 62)) {
          i_956301324 = addInt(i_956301324, 5);
          }
          else {
          if (((s_956301322[chckIndx(i_956301324, 0, (s_956301322).length - 1)] >>> 1) == 126)) {
          i_956301324 = addInt(i_956301324, 6);
          }
          else {
          i_956301324 = addInt(i_956301324, 1);
          }
          }}}}}
          result_956301323 = addInt(result_956301323, 1);
        }
    } while (false);

  return result_956301323;

}

function runeLenAt_956301377(s_956301378, i_956301379) {
  var result_956301380 = 0;

    if ((s_956301378[chckIndx(i_956301379, 0, (s_956301378).length - 1)] <= 127)) {
    result_956301380 = 1;
    }
    else {
    if (((s_956301378[chckIndx(i_956301379, 0, (s_956301378).length - 1)] >>> 5) == 6)) {
    result_956301380 = 2;
    }
    else {
    if (((s_956301378[chckIndx(i_956301379, 0, (s_956301378).length - 1)] >>> 4) == 14)) {
    result_956301380 = 3;
    }
    else {
    if (((s_956301378[chckIndx(i_956301379, 0, (s_956301378).length - 1)] >>> 3) == 30)) {
    result_956301380 = 4;
    }
    else {
    if (((s_956301378[chckIndx(i_956301379, 0, (s_956301378).length - 1)] >>> 2) == 62)) {
    result_956301380 = 5;
    }
    else {
    if (((s_956301378[chckIndx(i_956301379, 0, (s_956301378).length - 1)] >>> 1) == 126)) {
    result_956301380 = 6;
    }
    else {
      result_956301380 = 1;
    }
    }}}}}

  return result_956301380;

}

function runeOffset_956301949(s_956301950, pos_956301951, start_956301952) {
  var result_956301953 = 0;

  BeforeRet: do {
    var i_956301954 = 0;
    var o_956301955 = start_956301952;
    Label1: do {
        Label2: while (true) {
        if (!(i_956301954 < pos_956301951)) break Label2;
          o_956301955 = addInt(o_956301955, chckRange(runeLenAt_956301377(s_956301950, o_956301955), 0, 2147483647));
          if (((s_956301950).length <= o_956301955)) {
          result_956301953 = -1;
          break BeforeRet;
          }
          
          i_956301954 = addInt(i_956301954, 1);
        }
    } while (false);
    result_956301953 = o_956301955;
    break BeforeRet;
  } while (false);

  return result_956301953;

}

function validateUtf8_956301589(s_956301590) {
            var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;

  var result_956301591 = 0;

  BeforeRet: do {
    var i_956301592 = 0;
    var L_956301593 = (s_956301590).length;
    Label1: do {
        Label2: while (true) {
        if (!(i_956301592 < L_956301593)) break Label2;
          if ((s_956301590[chckIndx(i_956301592, 0, (s_956301590).length - 1)] <= 127)) {
          i_956301592 = addInt(i_956301592, 1);
          }
          else {
          if (((s_956301590[chckIndx(i_956301592, 0, (s_956301590).length - 1)] >>> 5) == 6)) {
          if ((s_956301590[chckIndx(i_956301592, 0, (s_956301590).length - 1)] < 194)) {
          result_956301591 = i_956301592;
          break BeforeRet;
          }
          
            if (!(addInt(i_956301592, 1) < L_956301593)) Temporary3 = false; else {              Temporary3 = ((s_956301590[chckIndx(addInt(i_956301592, 1), 0, (s_956301590).length - 1)] >>> 6) == 2);            }          if (Temporary3) {
          i_956301592 = addInt(i_956301592, 2);
          }
          else {
            result_956301591 = i_956301592;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_956301590[chckIndx(i_956301592, 0, (s_956301590).length - 1)] >>> 4) == 14)) {
            if (!(addInt(i_956301592, 2) < L_956301593)) Temporary5 = false; else {              Temporary5 = ((s_956301590[chckIndx(addInt(i_956301592, 1), 0, (s_956301590).length - 1)] >>> 6) == 2);            }            if (!Temporary5) Temporary4 = false; else {              Temporary4 = ((s_956301590[chckIndx(addInt(i_956301592, 2), 0, (s_956301590).length - 1)] >>> 6) == 2);            }          if (Temporary4) {
          i_956301592 = addInt(i_956301592, 3);
          }
          else {
            result_956301591 = i_956301592;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_956301590[chckIndx(i_956301592, 0, (s_956301590).length - 1)] >>> 3) == 30)) {
            if (!(addInt(i_956301592, 3) < L_956301593)) Temporary8 = false; else {              Temporary8 = ((s_956301590[chckIndx(addInt(i_956301592, 1), 0, (s_956301590).length - 1)] >>> 6) == 2);            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = ((s_956301590[chckIndx(addInt(i_956301592, 2), 0, (s_956301590).length - 1)] >>> 6) == 2);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = ((s_956301590[chckIndx(addInt(i_956301592, 3), 0, (s_956301590).length - 1)] >>> 6) == 2);            }          if (Temporary6) {
          i_956301592 = addInt(i_956301592, 4);
          }
          else {
            result_956301591 = i_956301592;
            break BeforeRet;
          }
          
          }
          else {
            result_956301591 = i_956301592;
            break BeforeRet;
          }
          }}}
        }
    } while (false);
    result_956301591 = -1;
    break BeforeRet;
  } while (false);

  return result_956301591;

}

function nsuRepeatChar(c_838861819, count_838861820) {
  var result_838861821 = [];

    result_838861821 = nimCopy(null, mnewString(count_838861820), NTI33554439);
    Label1: do {
      var i_838861826 = 0;
      var colontmp__486539576 = 0;
      colontmp__486539576 = subInt(count_838861820, 1);
      var res_486539577 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539577 <= colontmp__486539576)) break Label3;
            i_838861826 = res_486539577;
            result_838861821[chckIndx(i_838861826, 0, (result_838861821).length - 1)] = c_838861819;
            res_486539577 = addInt(res_486539577, 1);
          }
      } while (false);
    } while (false);

  return result_838861821;

}

function alignString_1056964628(s_1056964629, minimumWidth_1056964630, align_1056964631, fill_1056964632) {
      var Temporary1;

  var result_1056964633 = [];

    if ((minimumWidth_1056964630 == 0)) {
    result_1056964633 = nimCopy(null, s_1056964629, NTI33554439);
    }
    else {
      if ((validateUtf8_956301589(s_1056964629) == -1)) {
      Temporary1 = nucruneLen(s_1056964629);
      }
      else {
      Temporary1 = (s_1056964629).length;
      }
      
      var sRuneLen_1056964634 = Temporary1;
      var toFill_1056964635 = subInt(minimumWidth_1056964630, sRuneLen_1056964634);
      if ((toFill_1056964635 <= 0)) {
      result_1056964633 = nimCopy(null, s_1056964629, NTI33554439);
      }
      else {
      if (((align_1056964631 == 60) || (align_1056964631 == 0))) {
      result_1056964633 = nimCopy(null, (s_1056964629 || []).concat(nsuRepeatChar(fill_1056964632, chckRange(toFill_1056964635, 0, 2147483647)) || []), NTI33554439);
      }
      else {
      if ((align_1056964631 == 94)) {
      var half_1056964636 = divInt(toFill_1056964635, 2);
      result_1056964633 = nimCopy(null, (nsuRepeatChar(fill_1056964632, chckRange(half_1056964636, 0, 2147483647)) || []).concat(s_1056964629 || [],nsuRepeatChar(fill_1056964632, chckRange(subInt(toFill_1056964635, half_1056964636), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        result_1056964633 = nimCopy(null, (nsuRepeatChar(fill_1056964632, chckRange(toFill_1056964635, 0, 2147483647)) || []).concat(s_1056964629 || []), NTI33554439);
      }
      }}
    }
    

  return result_1056964633;

}

function formatValue_1056964770(result_1056964771, result_1056964771_Idx, value_1056964772, specifier_1056964773) {
    var spec_1056964774 = parseStandardFormatSpecifier_1056964666(specifier_1056964773, 0, false);
    var value_1056964775 = nimCopy(null, value_1056964772, NTI33554439);
    switch (spec_1056964774.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_1056964774.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1056964774.precision == -1))) {
    if ((spec_1056964774.precision < nucruneLen(value_1056964775))) {
    (value_1056964775.length = chckRange(runeOffset_956301949(value_1056964775, chckRange(spec_1056964774.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    result_1056964771[result_1056964771_Idx].push.apply(result_1056964771[result_1056964771_Idx], alignString_1056964628(value_1056964775, spec_1056964774.minimumWidth, spec_1056964774.align, spec_1056964774.fill));;

  
}

function sysFatal_218103844(message_218103847) {
    raiseException({message: nimCopy(null, message_218103847, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103842(msg_218103843) {
    sysFatal_218103844(msg_218103843);

  
}

function failedAssertImpl_218103866(msg_218103867) {
    raiseAssert_218103842(msg_218103867);

  
}

function toHtml_486539535(self_486539536) {
  var result_486539537 = [];

    var text_486539538 = [];
    Label1: do {
      var ch_486539539 = 0;
      var i_486539564 = 0;
      var L_486539565 = (self_486539536.Field0).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539564 < L_486539565)) break Label3;
            ch_486539539 = self_486539536.Field0[chckIndx(i_486539564, 0, (self_486539536.Field0).length - 1)];
            var fmtRes_486539544 = [mnewString(0)];
            fmtRes_486539544[0].push.apply(fmtRes_486539544[0], makeNimstrLit("<"));;
            formatValue_1056964770(fmtRes_486539544, 0, makeNimstrLit("i"), []);
            fmtRes_486539544[0].push.apply(fmtRes_486539544[0], makeNimstrLit(">"));;
            addChar(fmtRes_486539544[0], ch_486539539);;
            fmtRes_486539544[0].push.apply(fmtRes_486539544[0], makeNimstrLit("</"));;
            formatValue_1056964770(fmtRes_486539544, 0, makeNimstrLit("i"), []);
            fmtRes_486539544[0].push.apply(fmtRes_486539544[0], makeNimstrLit(">"));;
            text_486539538.push.apply(text_486539538, fmtRes_486539544[0]);;
            i_486539564 = addInt(i_486539564, 1);
            if (!(((self_486539536.Field0).length == L_486539565))) {
            failedAssertImpl_218103866(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    var fmtRes_486539549 = [mnewString(0)];
    fmtRes_486539549[0].push.apply(fmtRes_486539549[0], makeNimstrLit("<style>"));;
    formatValue_1056964770(fmtRes_486539549, 0, self_486539536.Field2, []);
    fmtRes_486539549[0].push.apply(fmtRes_486539549[0], makeNimstrLit("</style><"));;
    formatValue_1056964770(fmtRes_486539549, 0, makeNimstrLit("span"), []);
    fmtRes_486539549[0].push.apply(fmtRes_486539549[0], makeNimstrLit(" class=\""));;
    formatValue_1056964770(fmtRes_486539549, 0, self_486539536.Field1, []);
    fmtRes_486539549[0].push.apply(fmtRes_486539549[0], makeNimstrLit("\">"));;
    formatValue_1056964770(fmtRes_486539549, 0, text_486539538, []);
    fmtRes_486539549[0].push.apply(fmtRes_486539549[0], makeNimstrLit("</"));;
    formatValue_1056964770(fmtRes_486539549, 0, makeNimstrLit("span"), []);
    fmtRes_486539549[0].push.apply(fmtRes_486539549[0], makeNimstrLit(">"));;
    result_486539537 = nimCopy(null, fmtRes_486539549[0], NTI33554439);

  return result_486539537;

}

function rand_486539418(r_486539420, max_486539421) {
  var result_486539422 = 0;

  BeforeRet: do {
    if ((max_486539421 == 0)) {
    break BeforeRet;
    }
    else {
      var max_486539423 = max_486539421;
      Label1: do {
          Label2: while (true) {
          if (!true) break Label2;
            var x_486539432 = next_603979816(r_486539420);
            if ((x_486539432 <= ((4294967295 - (4294967295 % max_486539423)) ))) {
            result_486539422 = (x_486539432 % ((max_486539423 + 1) ));
            break BeforeRet;
            }
            
          }
      } while (false);
    }
    
  } while (false);

  return result_486539422;

}

function rand_486539407(r_486539409, x_486539410) {
  var result_486539411 = 0;

    if (!((x_486539410.a <= x_486539410.b))) {
    failedAssertImpl_218103866(makeNimstrLit("random.nim(316, 10) `x.a <= x.b` "));
    }
    
    result_486539411 = (((rand_486539418(r_486539409, (((x_486539410.b >>> 0) - (x_486539410.a >>> 0)) >>> 0)) + (x_486539410.a >>> 0)) >>> 0) | 0);

  return result_486539411;

}

function rand_486539399(x_486539401) {
  var result_486539402 = 0;

    result_486539402 = rand_486539407(state_603979789[0], x_486539401);

  return result_486539402;

}

function HEX2EHEX2E_956302163(a_956302166, b_956302167) {
  var result_956302168 = ({a: 0, b: 0});

    result_956302168 = nimCopy(result_956302168, {a: a_956302166, b: b_956302167}, NTI620757493);

  return result_956302168;

}

function rand_603979877(r_603979879, max_603979880) {
  var result_603979881 = 0;

  BeforeRet: do {
    if ((max_603979880 == 0)) {
    break BeforeRet;
    }
    else {
      var max_603979882 = max_603979880;
      if ((max_603979882 == -1)) {
      result_603979881 = next_603979816(r_603979879);
      break BeforeRet;
      }
      
      Label1: do {
          Label2: while (true) {
          if (!true) break Label2;
            var x_603979895 = next_603979816(r_603979879);
            if ((x_603979895 <= ((4294967295 - (4294967295 % max_603979882)) ))) {
            result_603979881 = (x_603979895 % ((max_603979882 + 1) ));
            break BeforeRet;
            }
            
          }
      } while (false);
    }
    
  } while (false);

  return result_603979881;

}

function rand_603979873(r_603979874, max_603979875) {
  var result_603979876 = 0;

    result_603979876 = rand_603979877(r_603979874, max_603979875);

  return result_603979876;

}

function sample_486539442(r_486539444, s_486539445) {
  var result_486539446 = 0;

  BeforeRet: do {
    if (!(!((SetCard(s_486539445) == 0)))) {
    failedAssertImpl_218103866(makeNimstrLit("random.nim(386, 10) `\x0Anot (card(s) == 0)` "));
    }
    
    var i_486539458 = rand_603979873(r_486539444, chckRange(subInt(SetCard(s_486539445), 1), 0, 2147483647));
    Label1: do {
      var e_486539479 = 0;
      var i_486539592 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539592 <= 255)) break Label3;
            if ((s_486539445[chckRange(i_486539592, 0, 255)] != undefined)) {
            e_486539479 = chckRange(i_486539592, 0, 255);
            if ((i_486539458 == 0)) {
            result_486539446 = e_486539479;
            break BeforeRet;
            }
            
            i_486539458 = subInt(i_486539458, 1);
            }
            
            i_486539592 = addInt(i_486539592, 1);
          }
      } while (false);
    } while (false);
  } while (false);

  return result_486539446;

}

function sample_486539438(s_486539440) {
  var result_486539441 = 0;

    result_486539441 = sample_486539442(state_603979789[0], s_486539440);

  return result_486539441;

}

function mkDigit_1056964613(v_1056964614, typ_1056964615) {
      var Temporary1;

  var result_1056964616 = [];

    if (!((v_1056964614 < 26))) {
    failedAssertImpl_218103866(makeNimstrLit("strformat.nim(320, 9) `v < 26` "));
    }
    
    if ((v_1056964614 < 10)) {
    result_1056964616 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1056964614), 0, 255)), NTI33554439);
    }
    else {
      if ((typ_1056964615 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1056964616 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1056964614), 10), 0, 255)), NTI33554439);
    }
    

  return result_1056964616;

}

function formatInt_486539315(n_486539317, radix_486539318, spec_486539319) {
    var Temporary1;
    var Temporary8;

  var result_486539320 = [];

    var n_486539323 = n_486539317;
    var negative_486539324 = (n_486539323 < 0);
    if (negative_486539324) {
    Temporary1 = ((~(n_486539323) + 1) );
    }
    else {
    Temporary1 = n_486539323;
    }
    
    var v_486539325 = Temporary1;
    var xx_486539326 = [];
    if (spec_486539319.alternateForm) {
    switch (spec_486539319.typ) {
    case 88:
      xx_486539326 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 120:
      xx_486539326 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 98:
      xx_486539326 = nimCopy(null, makeNimstrLit("0b"), NTI33554439);
      break;
    case 111:
      xx_486539326 = nimCopy(null, makeNimstrLit("0o"), NTI33554439);
      break;
    default: 
      break;
    }
    }
    
    if ((v_486539325 == 0)) {
    result_486539320 = nimCopy(null, makeNimstrLit("0"), NTI33554439);
    }
    else {
      result_486539320 = nimCopy(null, [], NTI33554439);
      Label2: do {
          Label3: while (true) {
          if (!(0 < v_486539325)) break Label3;
            var d_486539327 = (v_486539325 % radix_486539318);
            v_486539325 = Math.trunc(((v_486539325 / radix_486539318) ));
            result_486539320.push.apply(result_486539320, mkDigit_1056964613(chckRange(d_486539327, -2147483648, 2147483647), spec_486539319.typ));;
          }
      } while (false);
      Label4: do {
        var idx_486539332 = 0;
        var colontmp__486539601 = 0;
        colontmp__486539601 = divInt((result_486539320).length, 2);
        var i_486539602 = 0;
        Label5: do {
            Label6: while (true) {
            if (!(i_486539602 < colontmp__486539601)) break Label6;
              idx_486539332 = i_486539602;
              var Temporary7 = result_486539320[chckIndx(idx_486539332, 0, (result_486539320).length - 1)]; result_486539320[chckIndx(idx_486539332, 0, (result_486539320).length - 1)] = result_486539320[chckIndx(subInt(subInt((result_486539320).length, idx_486539332), 1), 0, (result_486539320).length - 1)]; result_486539320[chckIndx(subInt(subInt((result_486539320).length, idx_486539332), 1), 0, (result_486539320).length - 1)] = Temporary7;              i_486539602 = addInt(i_486539602, 1);
            }
        } while (false);
      } while (false);
    }
    
    if (spec_486539319.padWithZero) {
    if (negative_486539324) Temporary8 = true; else {      Temporary8 = !((spec_486539319.sign == 45));    }    var sign_486539337 = Temporary8;
    var toFill_486539341 = subInt(subInt(subInt(spec_486539319.minimumWidth, (result_486539320).length), (xx_486539326).length), (sign_486539337 ? 1 : 0));
    if ((0 < toFill_486539341)) {
    result_486539320 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_486539341, 0, 2147483647)) || []).concat(result_486539320 || []), NTI33554439);
    }
    
    }
    
    if (negative_486539324) {
    result_486539320 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_486539326 || [],result_486539320 || []), NTI33554439);
    }
    else {
    if (!((spec_486539319.sign == 45))) {
    result_486539320 = nimCopy(null, [spec_486539319.sign].concat(xx_486539326 || [],result_486539320 || []), NTI33554439);
    }
    else {
      result_486539320 = nimCopy(null, (xx_486539326 || []).concat(result_486539320 || []), NTI33554439);
    }
    }
    if ((spec_486539319.align == 60)) {
    Label9: do {
      var i_486539346 = 0;
      var colontmp__486539605 = 0;
      colontmp__486539605 = (result_486539320).length;
      var i_486539606 = colontmp__486539605;
      Label10: do {
          Label11: while (true) {
          if (!(i_486539606 < spec_486539319.minimumWidth)) break Label11;
            i_486539346 = i_486539606;
            addChar(result_486539320, spec_486539319.fill);;
            i_486539606 = addInt(i_486539606, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      var toFill_486539347 = subInt(spec_486539319.minimumWidth, (result_486539320).length);
      if ((spec_486539319.align == 94)) {
      var half_486539348 = divInt(toFill_486539347, 2);
      result_486539320 = nimCopy(null, (nsuRepeatChar(spec_486539319.fill, chckRange(half_486539348, 0, 2147483647)) || []).concat(result_486539320 || [],nsuRepeatChar(spec_486539319.fill, chckRange(subInt(toFill_486539347, half_486539348), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        if ((0 < toFill_486539347)) {
        result_486539320 = nimCopy(null, (nsuRepeatChar(spec_486539319.fill, chckRange(toFill_486539347, 0, 2147483647)) || []).concat(result_486539320 || []), NTI33554439);
        }
        
      }
      
    }
    

  return result_486539320;

}

function formatValue_486539307(result_486539309, result_486539309_Idx, value_486539310, specifier_486539311) {
  BeforeRet: do {
    if (((specifier_486539311).length == 0)) {
    result_486539309[result_486539309_Idx].push.apply(result_486539309[result_486539309_Idx], cstrToNimstr((value_486539310) + ""));;
    break BeforeRet;
    }
    
    var spec_486539312 = parseStandardFormatSpecifier_1056964666(specifier_486539311, 0, false);
    var radix_486539313 = 10;
    switch (spec_486539312.typ) {
    case 120:
    case 88:
      radix_486539313 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_486539313 = 2;
      break;
    case 111:
      radix_486539313 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_486539312.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_486539309[result_486539309_Idx].push.apply(result_486539309[result_486539309_Idx], formatInt_486539315(value_486539310, radix_486539313, spec_486539312));;
  } while (false);

  
}

function HEX5BHEX5D_33557737(s_33557738, s_33557738_Idx, i_33557739) {
  var result_33557740 = null;
  var result_33557740_Idx = 0;

    result_33557740 = s_33557738[s_33557738_Idx]; result_33557740_Idx = chckIndx(subInt((s_33557738[s_33557738_Idx]).length, i_33557739), 0, (s_33557738[s_33557738_Idx]).length - 1);

  return [result_33557740, result_33557740_Idx];

}

function genCss_486539277(class_486539278, fakeCharsIndex_486539279) {
      var Temporary4;

  var result_486539280 = [[]];

    Label1: do {
      var i_486539293 = null;
      var i_486539293_Idx = 0;
      var i_486539597 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539597 < (fakeCharsIndex_486539279).length)) break Label3;
            i_486539293 = fakeCharsIndex_486539279; i_486539293_Idx = chckIndx(i_486539597, 0, (fakeCharsIndex_486539279).length - 1);
            var fmtRes_486539302 = [mnewString(0)];
            formatValue_1056964770(fmtRes_486539302, 0, makeNimstrLit("span"), []);
            fmtRes_486539302[0].push.apply(fmtRes_486539302[0], makeNimstrLit("."));;
            formatValue_1056964770(fmtRes_486539302, 0, class_486539278, []);
            fmtRes_486539302[0].push.apply(fmtRes_486539302[0], makeNimstrLit(" "));;
            formatValue_1056964770(fmtRes_486539302, 0, makeNimstrLit("i"), []);
            fmtRes_486539302[0].push.apply(fmtRes_486539302[0], makeNimstrLit(":nth-child("));;
            formatValue_486539307(fmtRes_486539302, 0, i_486539293[i_486539293_Idx], []);
            fmtRes_486539302[0].push.apply(fmtRes_486539302[0], makeNimstrLit("),"));;
            result_486539280[0].push.apply(result_486539280[0], fmtRes_486539302[0]);;
            i_486539597 = addInt(i_486539597, 1);
          }
      } while (false);
    } while (false);
    if (((Temporary4 = HEX5BHEX5D_33557737(result_486539280, 0, 1), Temporary4)[0][Temporary4[1]] == 44)) {
    result_486539280[0] = nimCopy(null, HEX5BHEX5D_956304538(result_486539280[0], HEX2EHEX2E_889192528(0, 2)), NTI33554439);
    }
    
    result_486539280[0].push.apply(result_486539280[0], makeNimstrLit("{font-size:0px;}"));;
    var fmtRes_486539371 = [mnewString(0)];
    formatValue_1056964770(fmtRes_486539371, 0, makeNimstrLit("span"), []);
    fmtRes_486539371[0].push.apply(fmtRes_486539371[0], makeNimstrLit("."));;
    formatValue_1056964770(fmtRes_486539371, 0, class_486539278, []);
    fmtRes_486539371[0].push.apply(fmtRes_486539371[0], makeNimstrLit(" "));;
    formatValue_1056964770(fmtRes_486539371, 0, makeNimstrLit("i"), []);
    result_486539280[0].push.apply(result_486539280[0], fmtRes_486539371[0]);;
    result_486539280[0].push.apply(result_486539280[0], makeNimstrLit("{font-style: unset;}"));;

  return result_486539280[0];

}

function shuffle_486539385(text_486539386, shuffleLevel_486539387) {
  var result_486539388 = {Field0: [], Field1: [], Field2: []};

    var fakeWordsIndex_486539389 = [];
    Label1: do {
      var __486539437 = 0;
      var colontmp__486539580 = 0;
      colontmp__486539580 = rand_486539399(HEX2EHEX2E_956302163(10, 20));
      var res_486539581 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539581 <= colontmp__486539580)) break Label3;
            __486539437 = res_486539581;
            addChar(result_486539388.Field1, sample_486539438(ConstSet9));;
            res_486539581 = addInt(res_486539581, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
        Label5: while (true) {
        if (!!((ConstSet10[result_486539388.Field1[chckIndx(0, 0, (result_486539388.Field1).length - 1)]] != undefined))) break Label5;
          result_486539388.Field1 = nimCopy(null, HEX5BHEX5D_956304538(result_486539388.Field1, HEX2EHEX2E_889192528(1, 1)), NTI33554439);
        }
    } while (false);
    Label6: do {
      var ch_486539506 = 0;
      var i_486539586 = 0;
      var L_486539587 = (text_486539386).length;
      Label7: do {
          Label8: while (true) {
          if (!(i_486539586 < L_486539587)) break Label8;
            ch_486539506 = text_486539386[chckIndx(i_486539586, 0, (text_486539386).length - 1)];
            addChar(result_486539388.Field0, ch_486539506);;
            Label9: do {
                Label10: while (true) {
                if (!(0 < rand_486539399(HEX2EHEX2E_956302163(0, shuffleLevel_486539387)))) break Label10;
                  addChar(result_486539388.Field0, sample_486539438(ConstSet11));;
                  fakeWordsIndex_486539389.push((result_486539388.Field0).length);;
                }
            } while (false);
            i_486539586 = addInt(i_486539586, 1);
            if (!(((text_486539386).length == L_486539587))) {
            failedAssertImpl_218103866(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_486539388.Field2 = nimCopy(null, genCss_486539277(result_486539388.Field1, fakeWordsIndex_486539389), NTI33554439);

  return result_486539388;

}

function antiCopy(text_486539551, shuffleLevel_486539552) {
  var result_486539553 = null;

    result_486539553 = toJSStr(toHtml_486539535(shuffle_486539385(cstrToNimstr(text_486539551), shuffleLevel_486539552)));

  return result_486539553;

}
